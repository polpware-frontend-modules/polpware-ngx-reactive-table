{"version":3,"sources":["ng://@polpware/ngx-reactive-table/lib/bases/ngx-datatable-powered-base.ts"],"names":["defaultSettings","pageSize","NgxDatatablePoweredBase","this","ColumnMode","columns","rows","totalCount","pageIndex","loading","sortingKey","sorts","prototype","ngOnInit","settings","Object","assign","onPageChanged","evt","buildTableDataAsync","offset","refresh","inputs"],"mappings":"0ZAkCA,IAAMA,EAAsC,CACxCC,SAAU,iBAGd,SAAAC,IAIIC,KAAAC,WAAaA,EAAAA,WAEbD,KAAAE,QAAuC,GAEvCF,KAAAG,KAAiB,GAEjBH,KAAAI,WAAqB,EACrBJ,KAAAK,UAAoB,EAEpBL,KAAAF,SAAmB,GACnBE,KAAAM,SAAmB,EAGnBN,KAAAO,WAAqB,GAErBP,KAAAQ,MAAgC,UAEhCT,EAAAU,UAAAC,SAAA,WACI,IAAMC,EAAWC,OAAOC,OAAO,GAAIhB,EAAiBG,KAAKW,UACzDX,KAAKF,SAAWa,EAASb,UAK7BC,EAAAU,UAAAK,cAAA,SAAcC,GACVf,KAAKgB,oBAAoBD,EAAIE,SAGjClB,EAAAU,UAAAS,QAAA,WAEIlB,KAAKgB,oBAAoB,qCAlCXjB,qCAAAA,EAAuBoB,OAAA,CAAAR,SAAA","sourcesContent":["import { Input, OnInit, TemplateRef } from '@angular/core';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\n\nexport interface IComponentSettings {\n    pageSize?: number;\n}\n\nexport interface IColumnConfiguration {\n    name?: string;\n    prop?: string;\n    width?: number;\n    maxWidth?: number;\n    minWidth?: number;\n    sortable?: boolean;\n    headerTemplate?: TemplateRef<any>;\n    cellTemplate?: TemplateRef<any>;\n}\n\nexport interface ISortableColumn {\n    prop: string;\n    dir: 'asc' | 'desc';\n}\n\nexport interface ISortChangedEvent {\n    column: {\n        prop: string;\n    };\n    newValue: 'asc' | 'desc';\n}\n\nexport interface IPageChangedEvent {\n    offset: number;\n}\n\nconst defaultSettings: IComponentSettings = {\n    pageSize: 40\n}\n\nexport abstract class NgxDatatablePoweredBase<T> implements OnInit {\n\n    @Input() settings: IComponentSettings;\n\n    ColumnMode = ColumnMode;\n\n    columns: Array<IColumnConfiguration> = [];\n\n    rows: Array<T> = [];\n\n    totalCount: number = 0;\n    pageIndex: number = 0; // page index\n\n    pageSize: number = 40;\n    loading: boolean = false;\n\n    // Sorting \n    sortingKey: string = '';\n    // Describe the init sorting order.\n    sorts: Array<ISortableColumn> = [];\n\n    ngOnInit(): void {\n        const settings = Object.assign({}, defaultSettings, this.settings);\n        this.pageSize = settings.pageSize;\n    }\n\n    protected abstract buildTableDataAsync(pageIndex: number): Promise<any>;\n\n    onPageChanged(evt: IPageChangedEvent) {\n        this.buildTableDataAsync(evt.offset);\n    }\n\n    refresh() {\n        // The other settings stay the same.\n        this.buildTableDataAsync(0);\n    }\n\n    abstract onSortChanged(evt: ISortChangedEvent): any;\n}\n"]}