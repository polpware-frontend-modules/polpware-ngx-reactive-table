{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@polpware/ngx-reactive-table/lib/interfaces.ts","ng://@polpware/ngx-reactive-table/lib/bases/ngx-datatable-powered-base.ts","ng://@polpware/ngx-reactive-table/lib/bases/ngx-datatable-external-data.ts","ng://@polpware/ngx-reactive-table/lib/bases/ngx-datatable-local-data.ts","ng://@polpware/ngx-reactive-table/lib/utils.ts","ng://@polpware/ngx-reactive-table/lib/decors/support-operations.decorator.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__read","o","m","r","ar","error","__spread","concat","noopPromise","data","rmPromise","addOrEditPromise","id","Date","getTime","defaultSettings","pageSize","editable","rmAsyncHandler","addOrEditAsyncHandler","settings","ColumnMode","columns","rows","loading","totalCount","pageIndex","sortingKey","sorts","NgxDatatableExternalData","_super","onPageChanged","evt","buildTableDataAsync","offset","refresh","NgxDatatablePoweredBase","NgxDatatableExternalDataWithOperations","_this","SelectionType","selected","editing","backup","onSelect","_a","startAdd","startEdit","rowIndex","cancelEdit","confirmEditAsync","updateValue","event","prop","cleanEditing","rmAsync","NgxDatatableLocalData","sliceArray","fromIndex","endIndex","filter","index","countProperties","obj","count","defaultInputTypeValue","ty","class_1","defineProperty","splice","_b","newElem","forEach","a","inputType","firstPart","secondPart","elem","target","some"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { TemplateRef } from '@angular/core';\r\nimport { SelectionType } from '@swimlane/ngx-datatable';\r\n\r\nexport type HtmlInputTypeEnum = 'text' | 'tel' | 'email' | 'date' | 'number' | 'checkbox';\r\n\r\nexport interface IRowDataType {\r\n    id: any\r\n}\r\n\r\nexport interface IComponentSettings {\r\n    pageSize?: number;\r\n    editable?: boolean;\r\n    rmAsyncHandler?: (data: Array<IRowDataType>) => Promise<any>;\r\n    addOrEditAsyncHandler?: (data: IRowDataType) => Promise<IRowDataType>;\r\n}\r\n\r\nexport const noopPromise = (data: any) => new Promise((resolve, reject) => {\r\n    resolve(data);\r\n});\r\n\r\nexport const rmPromise = (data: Array<IRowDataType>) => new Promise((resolve, reject) => {\r\n    resolve();\r\n});\r\n\r\nexport const addOrEditPromise: (data: IRowDataType) => Promise<IRowDataType> = (data: IRowDataType) => new Promise((resolve, reject) => {\r\n    const newData: IRowDataType = Object.assign(data, { id: new Date().getTime() });\r\n    resolve(newData);\r\n});\r\n\r\n\r\nexport const defaultSettings: IComponentSettings = {\r\n    pageSize: 40,\r\n    editable: false,\r\n    rmAsyncHandler: rmPromise,\r\n    addOrEditAsyncHandler: addOrEditPromise\r\n}\r\n\r\nexport interface ITableColumnSpec {\r\n    name?: string;\r\n    prop?: string;\r\n    width?: number;\r\n    maxWidth?: number;\r\n    minWidth?: number;\r\n    canAutoResize?: boolean;\r\n    draggable?: boolean;\r\n    resizeable?: boolean;\r\n    headerCheckboxable?: boolean;\r\n    checkboxable?: boolean;\r\n    sortable?: boolean;\r\n    headerTemplate?: TemplateRef<any>;\r\n    cellTemplate?: TemplateRef<any>;\r\n    headerClass?: string;\r\n    cellClass?: string;\r\n    editable?: boolean; // editable, not part of the ngx datatable\r\n    inputType?: HtmlInputTypeEnum;\r\n    frozenLeft?: boolean;\r\n    frozenRight?: boolean;\r\n}\r\n\r\nexport interface ISortableColumn {\r\n    prop: string;\r\n    dir: 'asc' | 'desc';\r\n}\r\n\r\nexport interface ISortChangedEvent {\r\n    column: {\r\n        prop: string;\r\n    };\r\n    newValue: 'asc' | 'desc';\r\n}\r\n\r\nexport interface IPageChangedEvent {\r\n    offset: number;\r\n}\r\n\r\nexport interface IReactiveDatableBase<T extends IRowDataType> {\r\n    settings: IComponentSettings;\r\n\r\n    columns: Array<ITableColumnSpec>;\r\n\r\n    rows: Array<T>;\r\n\r\n    pageSize: number;\r\n    loading: boolean;\r\n\r\n    totalCount: number;\r\n    pageIndex: number; // page index\r\n\r\n    sortingKey: string;\r\n    // Describe the init sorting order.\r\n    sorts: Array<ISortableColumn>;\r\n}\r\n\r\nexport interface ITableWithOperationsBase<T extends IRowDataType> extends IReactiveDatableBase<T> {\r\n\r\n    // Support selected\r\n    selected: Array<T>;\r\n    // Suport editing\r\n    editing: { [key: string]: boolean };\r\n    backup: { [key: number]: T };\r\n\r\n    anyEditing: boolean;\r\n\r\n    onSelect(data: { selected: Array<T> }): void;\r\n    startAdd(): void;\r\n    startEdit(rowIndex: number): void;\r\n    cancelEdit(rowIndex: number): void;\r\n    confirmEditAsync(rowIndex: number): Promise<any>;\r\n    updateValue(event: any, prop: string, rowIndex: number): void;\r\n    cleanEditing(rowIndex: number): void;\r\n    rmAsync(): Promise<any>;\r\n}\r\n","import { Input, OnInit } from '@angular/core';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\nimport { defaultSettings, IComponentSettings, IRowDataType, ISortableColumn, ITableColumnSpec, IReactiveDatableBase } from '../interfaces';\n\nexport abstract class NgxDatatablePoweredBase<T extends IRowDataType>\n    implements IReactiveDatableBase<T> {\n\n    // Note that we do not make settings be an input,\n    // becasue the behavior of an input in the abstract base class is not well-defined\n    // Sometime, it works  and sometimes it causes compilation errors.\n    settings: IComponentSettings = defaultSettings;\n\n    ColumnMode = ColumnMode;\n\n    columns: Array<ITableColumnSpec> = [];\n\n    rows: Array<T> = [];\n\n    pageSize: number = defaultSettings.pageSize;\n    loading: boolean = false;\n\n    totalCount: number = 0;\n    pageIndex: number = 0; // page index\n\n    // We on purpose put the basic for sorting here, because they are required in\n    // supporting operations. \n    // Sorting \n    sortingKey: string = '';\n    // Describe the init sorting order.\n    sorts: Array<ISortableColumn> = [];\n}\n","import { SelectionType } from '@swimlane/ngx-datatable';\r\nimport { IPageChangedEvent, IRowDataType, ISortChangedEvent, ITableWithOperationsBase, noopPromise } from '../interfaces';\r\nimport { NgxDatatablePoweredBase } from './ngx-datatable-powered-base';\r\n\r\nexport abstract class NgxDatatableExternalData<T extends IRowDataType>\r\n    extends NgxDatatablePoweredBase<T> {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    protected abstract buildTableDataAsync(pageIndex: number): Promise<any>;\r\n\r\n    onPageChanged(evt: IPageChangedEvent) {\r\n        this.buildTableDataAsync(evt.offset);\r\n    }\r\n\r\n    refresh() {\r\n        // The other settings stay the same.\r\n        this.buildTableDataAsync(0);\r\n    }\r\n\r\n    abstract onSortChanged(evt: ISortChangedEvent): any;\r\n\r\n}\r\n\r\nexport abstract class NgxDatatableExternalDataWithOperations<T extends IRowDataType>\r\n    extends NgxDatatableExternalData<T>\r\n    implements ITableWithOperationsBase<T> {\r\n\r\n    SelectionType = SelectionType;\r\n\r\n    // Support selected\r\n    selected: Array<T> = [];\r\n    // Suport editing\r\n    editing: { [key: string]: boolean } = {};\r\n    backup: { [key: number]: T } = {};\r\n\r\n    anyEditing: boolean\r\n\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n\r\n    onSelect({ selected }) { }\r\n\r\n    startAdd() { }\r\n\r\n    startEdit(rowIndex: number) { }\r\n\r\n    // Support editing an existing one and adding a new one\r\n    cancelEdit(rowIndex: number) { };\r\n\r\n\r\n    async confirmEditAsync(rowIndex: number) {\r\n        await noopPromise(rowIndex);\r\n    }\r\n\r\n    updateValue(event: any, prop: string, rowIndex: number) { }\r\n\r\n    cleanEditing(rowIndex: number) { }\r\n\r\n    async rmAsync() {\r\n        await noopPromise(null);\r\n    }\r\n\r\n}\r\n","import { SelectionType } from '@swimlane/ngx-datatable';\r\nimport { IRowDataType, ITableWithOperationsBase, noopPromise } from '../interfaces';\r\nimport { NgxDatatablePoweredBase } from './ngx-datatable-powered-base';\r\n\r\n// Dervied classes must use decorator to provide implementation\r\nexport abstract class NgxDatatableLocalData<T extends IRowDataType>\r\n    extends NgxDatatablePoweredBase<T> implements ITableWithOperationsBase<T> {\r\n\r\n    SelectionType = SelectionType;\r\n\r\n    // Support selected\r\n    selected: Array<T> = [];\r\n    // Suport editing\r\n    editing: { [key: string]: boolean } = {};\r\n    backup: { [key: number]: T } = {};\r\n\r\n    anyEditing: boolean\r\n\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n\r\n    onSelect({ selected }) { }\r\n\r\n    startAdd() { }\r\n\r\n    startEdit(rowIndex: number) { }\r\n\r\n    // Support editing an existing one and adding a new one\r\n    cancelEdit(rowIndex: number) { };\r\n\r\n\r\n    async confirmEditAsync(rowIndex: number) {\r\n        await noopPromise(rowIndex);\r\n    }\r\n\r\n    updateValue(event: any, prop: string, rowIndex: number) { }\r\n\r\n    cleanEditing(rowIndex: number) { }\r\n\r\n    async rmAsync() {\r\n        await noopPromise(null);\r\n    }\r\n\r\n}\r\n","import { HtmlInputTypeEnum } from './interfaces';\r\n\r\n/**\r\n * Returns a slice of array (with value semantics) [fromIndex, endIndex]\r\n * @param data\r\n * @param fromIndex\r\n * @param endIndex\r\n */\r\nexport function sliceArray(data: Array<any>, fromIndex: number, endIndex: number) {\r\n    return data.filter((_, index) => {\r\n        return index >= fromIndex && index <= endIndex;\r\n    });\r\n}\r\n\r\nexport function countProperties(obj: Object) {\r\n    let count = 0;\r\n    for (var prop in obj) {\r\n        if (obj.hasOwnProperty(prop)) {\r\n            ++count;\r\n        }\r\n    }\r\n    return count;\r\n}\r\n\r\nexport function getInputType(data: any): HtmlInputTypeEnum {\r\n    const ty = typeof data;\r\n    if (ty == 'number') {\r\n        return 'number';\r\n    }\r\n    if (ty == 'boolean') {\r\n        return 'checkbox';\r\n    }\r\n    if (ty == 'object') {\r\n        if (data instanceof Date) {\r\n            return 'date';\r\n        }\r\n    }\r\n    return 'text';\r\n}\r\n\r\nexport function defaultInputTypeValue(t: HtmlInputTypeEnum) {\r\n    if (t == 'number') {\r\n        return 0;\r\n    }\r\n    if (t == 'checkbox') {\r\n        return false;\r\n    }\r\n    return '';\r\n}\r\n","import { IRowDataType, ITableWithOperationsBase } from '../interfaces';\r\nimport { countProperties, defaultInputTypeValue, sliceArray } from '../utils';\r\n\r\ninterface IDecoratorPrerequisite<T extends IRowDataType> extends ITableWithOperationsBase<T> {\r\n}\r\n\r\ntype DecoratorPrerequisiteClass<T extends IRowDataType> = { new(...args: any[]): IDecoratorPrerequisite<T> };\r\n\r\nexport function supportOperationsDecorator<T extends IRowDataType, U extends DecoratorPrerequisiteClass<T>>(constructor: U) {\r\n    return class extends constructor implements ITableWithOperationsBase<T> {\r\n\r\n        get anyEditing() {\r\n            return countProperties(this.backup) > 0;\r\n        }\r\n\r\n        onSelect({ selected }) {\r\n            this.selected.splice(0, this.selected.length);\r\n            this.selected.push(...selected);\r\n        }\r\n\r\n        startAdd() {\r\n            const newElem: any = {\r\n                id: ''\r\n            };\r\n            this.columns.forEach(a => {\r\n                if (a.editable) {\r\n                    newElem[a.prop] = defaultInputTypeValue(a.inputType);\r\n                }\r\n            });\r\n            // Add the element into the rows (no backup)\r\n            this.rows = [newElem, ...this.rows];\r\n            this.totalCount = this.totalCount + 1;\r\n            this.backup[0] = newElem;\r\n            // Enable editing it.\r\n            this.columns.forEach(a => {\r\n                if (a.editable) {\r\n                    this.editing[0 + '-' + a.prop] = true;\r\n                }\r\n            });\r\n        }\r\n\r\n        startEdit(rowIndex: number) {\r\n            const data = this.rows[rowIndex];\r\n            this.backup[rowIndex] = { ...data };\r\n            this.columns.forEach(a => {\r\n                if (a.editable) {\r\n                    this.editing[rowIndex + '-' + a.prop] = true;\r\n                }\r\n            });\r\n        }\r\n\r\n        // Support editing an existing one and adding a new one\r\n        cancelEdit(rowIndex: number) {\r\n            // Replace the old value\r\n            const firstPart = sliceArray(this.rows, 0, rowIndex - 1);\r\n            const secondPart = sliceArray(this.rows, rowIndex + 1, this.rows.length - 1);\r\n            const elem = this.backup[rowIndex];\r\n            // An existing one\r\n            if (elem.id) {\r\n                this.rows = [...firstPart, elem, ...secondPart];\r\n            } else {\r\n                // Otherwise, drop this.\r\n                this.rows = [...firstPart, ...secondPart];\r\n            }\r\n            this.cleanEditing(rowIndex);\r\n            delete this.backup[rowIndex];\r\n        }\r\n\r\n\r\n        async confirmEditAsync(rowIndex: number) {\r\n            const elem = this.rows[rowIndex];\r\n            if (this.settings.addOrEditAsyncHandler) {\r\n                const newElem = await this.settings.addOrEditAsyncHandler(elem);\r\n                // todo: Do we need to update data ????\r\n                const firstPart = sliceArray(this.rows, 0, rowIndex - 1);\r\n                const secondPart = sliceArray(this.rows, rowIndex + 1, this.rows.length - 1);\r\n                this.rows = [...firstPart, newElem, ...secondPart];\r\n            }\r\n            this.cleanEditing(rowIndex);\r\n            delete this.backup[rowIndex];\r\n        }\r\n\r\n        updateValue(event: any, prop: string, rowIndex: number) {\r\n            this.rows[rowIndex][prop] = event.target.value;\r\n        }\r\n\r\n        cleanEditing(rowIndex: number) {\r\n            this.columns.forEach(a => {\r\n                if (a.editable) {\r\n                    delete this.editing[rowIndex + '-' + a.prop];\r\n                }\r\n            });\r\n        }\r\n\r\n        async rmAsync() {\r\n            if (this.settings.rmAsyncHandler) {\r\n                // Expect to be a transaction \r\n                await this.settings.rmAsyncHandler(this.selected);\r\n            }\r\n            // Do not refresh; just delete them from the local set.\r\n            // Update data\r\n            this.rows = this.rows.filter(a => !this.selected.some(b => b === a));\r\n            this.totalCount = this.totalCount - this.selected.length;\r\n            this.selected = [];\r\n        }\r\n\r\n    }\r\n}\r\n"]}