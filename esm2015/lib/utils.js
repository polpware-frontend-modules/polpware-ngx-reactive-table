/**
 * Returns a slice of array (with value semantics) [fromIndex, endIndex]
 * @param data
 * @param fromIndex
 * @param endIndex
 */
export function sliceArray(data, fromIndex, endIndex) {
    return data.filter((_, index) => {
        return index >= fromIndex && index <= endIndex;
    });
}
export function countProperties(obj) {
    let count = 0;
    for (var prop in obj) {
        if (obj.hasOwnProperty(prop)) {
            ++count;
        }
    }
    return count;
}
export function getInputType(data) {
    const ty = typeof data;
    if (ty == 'number') {
        return 'number';
    }
    if (ty == 'boolean') {
        return 'checkbox';
    }
    if (ty == 'object') {
        if (data instanceof Date) {
            return 'date';
        }
    }
    return 'text';
}
export function defaultInputTypeValue(t) {
    if (t == 'number') {
        return 0;
    }
    if (t == 'checkbox') {
        return false;
    }
    return '';
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9scHdhcmUvbmd4LXJlYWN0aXZlLXRhYmxlLyIsInNvdXJjZXMiOlsibGliL3V0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBOzs7OztHQUtHO0FBQ0gsTUFBTSxVQUFVLFVBQVUsQ0FBQyxJQUFnQixFQUFFLFNBQWlCLEVBQUUsUUFBZ0I7SUFDNUUsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssRUFBRSxFQUFFO1FBQzVCLE9BQU8sS0FBSyxJQUFJLFNBQVMsSUFBSSxLQUFLLElBQUksUUFBUSxDQUFDO0lBQ25ELENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQztBQUVELE1BQU0sVUFBVSxlQUFlLENBQUMsR0FBVztJQUN2QyxJQUFJLEtBQUssR0FBRyxDQUFDLENBQUM7SUFDZCxLQUFLLElBQUksSUFBSSxJQUFJLEdBQUcsRUFBRTtRQUNsQixJQUFJLEdBQUcsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDMUIsRUFBRSxLQUFLLENBQUM7U0FDWDtLQUNKO0lBQ0QsT0FBTyxLQUFLLENBQUM7QUFDakIsQ0FBQztBQUVELE1BQU0sVUFBVSxZQUFZLENBQUMsSUFBUztJQUNsQyxNQUFNLEVBQUUsR0FBRyxPQUFPLElBQUksQ0FBQztJQUN2QixJQUFJLEVBQUUsSUFBSSxRQUFRLEVBQUU7UUFDaEIsT0FBTyxRQUFRLENBQUM7S0FDbkI7SUFDRCxJQUFJLEVBQUUsSUFBSSxTQUFTLEVBQUU7UUFDakIsT0FBTyxVQUFVLENBQUM7S0FDckI7SUFDRCxJQUFJLEVBQUUsSUFBSSxRQUFRLEVBQUU7UUFDaEIsSUFBSSxJQUFJLFlBQVksSUFBSSxFQUFFO1lBQ3RCLE9BQU8sTUFBTSxDQUFDO1NBQ2pCO0tBQ0o7SUFDRCxPQUFPLE1BQU0sQ0FBQztBQUNsQixDQUFDO0FBRUQsTUFBTSxVQUFVLHFCQUFxQixDQUFDLENBQW9CO0lBQ3RELElBQUksQ0FBQyxJQUFJLFFBQVEsRUFBRTtRQUNmLE9BQU8sQ0FBQyxDQUFDO0tBQ1o7SUFDRCxJQUFJLENBQUMsSUFBSSxVQUFVLEVBQUU7UUFDakIsT0FBTyxLQUFLLENBQUM7S0FDaEI7SUFDRCxPQUFPLEVBQUUsQ0FBQztBQUNkLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdG1sSW5wdXRUeXBlRW51bSB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XHJcblxyXG4vKipcclxuICogUmV0dXJucyBhIHNsaWNlIG9mIGFycmF5ICh3aXRoIHZhbHVlIHNlbWFudGljcykgW2Zyb21JbmRleCwgZW5kSW5kZXhdXHJcbiAqIEBwYXJhbSBkYXRhXHJcbiAqIEBwYXJhbSBmcm9tSW5kZXhcclxuICogQHBhcmFtIGVuZEluZGV4XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gc2xpY2VBcnJheShkYXRhOiBBcnJheTxhbnk+LCBmcm9tSW5kZXg6IG51bWJlciwgZW5kSW5kZXg6IG51bWJlcikge1xyXG4gICAgcmV0dXJuIGRhdGEuZmlsdGVyKChfLCBpbmRleCkgPT4ge1xyXG4gICAgICAgIHJldHVybiBpbmRleCA+PSBmcm9tSW5kZXggJiYgaW5kZXggPD0gZW5kSW5kZXg7XHJcbiAgICB9KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNvdW50UHJvcGVydGllcyhvYmo6IE9iamVjdCkge1xyXG4gICAgbGV0IGNvdW50ID0gMDtcclxuICAgIGZvciAodmFyIHByb3AgaW4gb2JqKSB7XHJcbiAgICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShwcm9wKSkge1xyXG4gICAgICAgICAgICArK2NvdW50O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBjb3VudDtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldElucHV0VHlwZShkYXRhOiBhbnkpOiBIdG1sSW5wdXRUeXBlRW51bSB7XHJcbiAgICBjb25zdCB0eSA9IHR5cGVvZiBkYXRhO1xyXG4gICAgaWYgKHR5ID09ICdudW1iZXInKSB7XHJcbiAgICAgICAgcmV0dXJuICdudW1iZXInO1xyXG4gICAgfVxyXG4gICAgaWYgKHR5ID09ICdib29sZWFuJykge1xyXG4gICAgICAgIHJldHVybiAnY2hlY2tib3gnO1xyXG4gICAgfVxyXG4gICAgaWYgKHR5ID09ICdvYmplY3QnKSB7XHJcbiAgICAgICAgaWYgKGRhdGEgaW5zdGFuY2VvZiBEYXRlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAnZGF0ZSc7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuICd0ZXh0JztcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGRlZmF1bHRJbnB1dFR5cGVWYWx1ZSh0OiBIdG1sSW5wdXRUeXBlRW51bSkge1xyXG4gICAgaWYgKHQgPT0gJ251bWJlcicpIHtcclxuICAgICAgICByZXR1cm4gMDtcclxuICAgIH1cclxuICAgIGlmICh0ID09ICdjaGVja2JveCcpIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gJyc7XHJcbn1cclxuIl19